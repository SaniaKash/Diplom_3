{"name": "Проверка закрытия всплывающего окна кликом по крестику.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_basic_functionality.TestBasicFunctionality object at 0x000001798256D350>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"b902f7a0-75dd-4447-a7b3-4a7e2c65d3bd\")>\n\n    @allure.title('Проверка закрытия всплывающего окна кликом по крестику.')\n    def test_click_close_button_ingredient_closed_details_window_success(self, driver):\n        user = MainPage(driver)\n        user.click_ingredient_souse_spicy()\n        user.wait_for_details_ingredient_souse_spicy_visible()\n        user.click_close_button_ingredients()\n        user.wait_for_ingredients_details_window_closed()\n>       assert user.check_ingredients_details_window_closed()\n\ntest\\test_basic_functionality.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\main_page.py:64: in check_ingredients_details_window_closed\n    return self.check_element_displayed(MainPageLocators.INGREDIENTS_WINDOW_CLOSED)\npages\\base_page.py:44: in check_element_displayed\n    return self.visibility_of_element_located(locator).is_displayed()\npages\\base_page.py:32: in visibility_of_element_located\n    return WebDriverWait(self.driver, 100).until(expected_conditions.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b902f7a0-75dd-4447-a7b3-4a7e2c65d3bd\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x000001798261EB60>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "steps": [{"name": "Открываем браузер Chrome", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.firefox.webdriver.WebDriver (session=\"b902f7a0-75dd-4447-a7b3-4a7e2c65d3bd\")>"}], "start": 1719159574033, "stop": 1719159574033}, {"name": "Кликаем ингредиент \"Соус спайси\".", "status": "passed", "start": 1719159574033, "stop": 1719159575290}, {"name": "Ожидаем появления окна с деталями \"Соус спайси\".", "status": "passed", "start": 1719159575290, "stop": 1719159575292}, {"name": "Нажимаем кнопку закрыть в окне ингредиентов.", "status": "passed", "start": 1719159575292, "stop": 1719159575507}, {"name": "Ожидаем появления окна с деталями ингредиента.", "status": "passed", "start": 1719159575507, "stop": 1719159575509}, {"name": "Проверяем закрытие окна с деталями ингредиента.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"B:\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"B:\\PycharmProjects\\Diplom_3\\pages\\main_page.py\", line 64, in check_ingredients_details_window_closed\n    return self.check_element_displayed(MainPageLocators.INGREDIENTS_WINDOW_CLOSED)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"B:\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 44, in check_element_displayed\n    return self.visibility_of_element_located(locator).is_displayed()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"B:\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 32, in visibility_of_element_located\n    return WebDriverWait(self.driver, 100).until(expected_conditions.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"B:\\PycharmProjects\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1719159575509, "stop": 1719159675569}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1719159574033, "stop": 1719159675569, "uuid": "047243b6-16aa-4ea4-80be-09d6e619613a", "historyId": "83b94d3f5b85b4580587c210cbfd28cb", "testCaseId": "8313e5e34819642835d31b5da0fab953", "fullName": "test.test_basic_functionality.TestBasicFunctionality#test_click_close_button_ingredient_closed_details_window_success", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_basic_functionality"}, {"name": "subSuite", "value": "TestBasicFunctionality"}, {"name": "host", "value": "WIN-A5H5V66RP32"}, {"name": "thread", "value": "1176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_basic_functionality"}]}